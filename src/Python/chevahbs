#!/usr/bin/env bash
#
# Chevah Build Script for Python.
#


# Import shared code.
# The relative paths work in both src/blabla and build/blabla.
source ../../functions.sh
source ../../functions_pythia.sh


chevahbs_getsources() {
    local name=$1
    local ver=$2
    local ext="tgz"
    local link=https://www.python.org/ftp/python/"$ver"/"$name"-"$ver"."$ext"

    download_sources $name $ver $link $ext
}


chevahbs_patch() {
    # Our own patch to avoid compiling certain modules.
    echo "# Applying disabled_modules.patch... #"
    execute patch -p 1 < disabled_modules.patch

    if [ "$BUILD_LIBEDIT" = "yes" ]; then
        # Adapted from https://bugs.python.org/issue13501.
        echo "# Applying readline_libedit.patch... #"
        execute patch -p 1 < readline_libedit.patch
    fi
}


chevahbs_configure() {
    CONFIG_ARGS="--disable-shared"

    # This requires the patch referenced in chevahbs_patch().
    if [ "$BUILD_LIBEDIT" = "yes" ]; then
        CONFIG_ARGS="${CONFIG_ARGS} --with-readline=editline"
    fi

    echo "# Copying collected header files among Python's ones... #"
    execute cp -r "$INSTALL_DIR"/include/* ./Include/

    # Copying headers to Include/ is not enough to find the OpenSSL ones.
    if [ "$BUILD_OPENSSL" = "yes" ]; then
        CONFIG_ARGS="${CONFIG_ARGS} --with-openssl=${INSTALL_DIR}"
    fi

    case $OS in
        alpine312)
            # Ugly hack for Python 3's configure issues.
            execute $SUDO_CMD rm -f /include
            execute $SUDO_CMD ln -s "${INSTALL_DIR}/include" /include
            ;;
        fbsd*|sol11*)
            LDFLAGS="$LDFLAGS -lncurses"
            ;;
        obsd*)
            # In OpenBSD 6.1 and newer, Python binary has to marked as
            # "wxneeded" because it breaks the mandatory W^X protection.
            LDFLAGS="$LDFLAGS -Wl,-z,wxneeded"
            ;;
    esac

    echo "# Patching the git rev id into Python's version string... #"
    execute cp Modules/getbuildinfo.c Modules/getbuildinfo.c.orig
    # Don't use 'sed -i' here, it's not supported on macOS 10.13.
    execute sed -e \
        s/gitid\ =\ \"default\"/gitid\ =\ \"$PYTHIA_VERSION\"/g \
        Modules/getbuildinfo.c.orig > Modules/getbuildinfo.c
    execute ./configure --prefix="" $CONFIG_ARGS
}


chevahbs_compile() {
    execute $MAKE
    # FIXME:12: Enable Python's own tests again.
    # Don't use execute below, some tests might fail innocuously.
    # $MAKE test
}


chevahbs_install() {
    case $OS in
        alpine*)
            # EMUTRAMP required for full functionality under a grsec kernel.
            # Don't use "paxmark", file attributes will be lost when tar'ed.
            # Needed with non-grsec kernels as well, otherwise PAM-related
            # compat tests crash with signal 11 (last tested on Alpine 3.12).
            execute paxctl -cE python
            ;;
    esac

    execute $MAKE install DESTDIR=$INSTALL_DIR
}


select_chevahbs_command $@
