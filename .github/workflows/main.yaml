#
# GitHub actions for building and testing.
#
# Don't use `-latest` for runners, pin specific OS versions instead. More at
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners.

name: GitHub-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Set to 'yes' to open a tunnel to GitHub's VMs through ngrok/tmate on failures.
# Also increase timeout-minutes for the relevant OS when debugging remotely.
env:
  CHEVAH_DEBUG: 'no'


jobs:
  windows:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.runs-on }}
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[skip ci]') == false
    strategy:
      # Workflow won't be cancelled at the first failed job.
      fail-fast: false
      matrix:
        runs-on: [ windows-2019, windows-2016 ]

    timeout-minutes: 20
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Make sure there are no concurrent jobs
    - uses: chevah/auto-cancel-redundant-job@v1
    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    # Explicitly run our scripts with Bash, not PowerShell (GitHub's default).
    - name: Detect current OS
      run: bash ./brink.sh detect_os

    - name: Build Python
      run: bash ./pythia build

    - name: Test Python
      run: bash ./pythia test

    # To use an RSA key with SFTPPlus, install upstream OpenSSH package,
    # which is more finicky in regards to file permissions.
    # Beware the commands in this step run under PowerShell.
    - name: Prepare SFTP upload
      run: |
        mkdir -p ~/.ssh/
        touch priv_key
        icacls .\priv_key /inheritance:r
        icacls .\priv_key /grant:r runneradmin:"(F)"
        echo "${{ secrets.SFTPPLUS_BIN_PRIV_KEY }}" > priv_key
        echo "${{ secrets.SFTPPLUS_BIN_HOST_KEY }}" > ~/.ssh/known_hosts
        choco install --yes --no-progress openssh

    # The publish_dist_sftp_batch file is generated by the build process.
    - name: Upload testing package
      run: |
        C:\Progra~1\OpenSSH-Win64\sftp.exe -b publish_dist_sftp_batch -i priv_key -o StrictHostKeyChecking=yes github-upload@bin.chevah.com
        echo "Package uploaded to https://bin.chevah.com:20443/testing/"

    # Per https://github.com/nelsonjchen/reverse-rdp-windows-github-actions,
    # but using the Ngrok token as password for the runnneradmin user.
    - name: Ngrok debugging on failure
      if: failure() && env.CHEVAH_DEBUG == 'yes'
      env:
        NGROK_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        choco install --yes --no-progress ngrok
        ngrok.exe authtoken $env:NGROK_TOKEN
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "$env:NGROK_TOKEN" -Force)
        ngrok.exe tcp 3389


  linux:
    runs-on: ${{ matrix.runs-on }}
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[skip ci]') == false
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ ubuntu-20.04, ubuntu-18.04 ]
    timeout-minutes: 40
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Install required packages
      run: sudo apt-get install libncurses5-dev

    - name: Detect current OS
      run: bash ./brink.sh detect_os

    - name: Build Python
      run: bash ./pythia build

    - name: Test Python
      run: bash ./pythia test

    - name: Upload testing package
      run: |
        mkdir -pv ~/.ssh/
        touch priv_key
        chmod 600 priv_key
        echo "${{ secrets.SFTPPLUS_BIN_PRIV_KEY }}" > priv_key
        echo "${{ secrets.SFTPPLUS_BIN_HOST_KEY }}" > ~/.ssh/known_hosts
        sftp -b publish_dist_sftp_batch -i priv_key -o StrictHostKeyChecking=yes github-upload@bin.chevah.com
        echo "Package uploaded to https://bin.chevah.com:20443/testing/"

    # If one of the above steps fails, fire up tmate for remote debugging.
    - name: Tmate debug on failure
      if: failure() && env.CHEVAH_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2


  macos:
    runs-on: macos-10.15
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[skip ci]') == false
    timeout-minutes: 60
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Detect current OS
      run: ./brink.sh detect_os

    # Some Homebrew libs pollute the build.
    # Also make sure binaries depending on these libs are out of the way.
    - name: Hack Homebrew
      run: |
        sudo mv -v /usr/local/bin/git{,.saved}
        sudo chmod -v a-r /usr/local/include/libintl.h
        sudo chmod -v a-r /usr/local/opt/gettext/lib/libintl.*

    - name: Build Python
      run: bash ./pythia build

    - name: Test Python
      run: bash ./pythia test

    - name: Upload testing package
      run: |
        mkdir -pv ~/.ssh/
        touch priv_key
        chmod 600 priv_key
        echo "${{ secrets.SFTPPLUS_BIN_PRIV_KEY }}" > priv_key
        echo "${{ secrets.SFTPPLUS_BIN_HOST_KEY }}" > ~/.ssh/known_hosts
        sftp -b publish_dist_sftp_batch -i priv_key -o StrictHostKeyChecking=yes github-upload@bin.chevah.com
        echo "Package uploaded to https://bin.chevah.com:20443/testing/"

    # Fix back Homebrew, to make everything functional for tmate debugging.
    - name: Unhack Homebrew
      if: failure() && env.CHEVAH_DEBUG == 'yes'
      run: |
        sudo chmod -v a+r /usr/local/opt/gettext/lib/libintl*
        sudo chmod -v a+r /usr/local/include/libintl.h
        sudo mv -v /usr/local/bin/git{.saved,}

    - name: Tmate debug on failure
      if: failure() && env.CHEVAH_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2
