#
# GitHub actions for building and testing.
#
# Use `-latest` for runners spinning up containers for best support. More at
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners.

name: GitHub-CI-Containerized

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Set to 'yes' to open a tunnel to GitHub's VMs through tmate on failures.
# Also increase timeout-minutes for the relevant OS when debugging remotely.
env:
  CHEVAH_DEBUG: 'no'


jobs:
  alpine-312:
    runs-on: ubuntu-latest
    container:
      image: alpine:3.12
    timeout-minutes: 40
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1

    - name: Install required packages
      run: apk add bash git gcc make m4 automake libtool texinfo patch unzip file musl-dev openssl-dev zlib-dev libffi-dev ncurses-dev sudo shadow

    - name: Prepare non-root user setup
      run: useradd -m -G wheel chevah

    - name: Clone repo independently
      run: |
        cd ~chevah
        sudo -H -u chevah git clone https://${{ secrets.PUBLIC_CI_CONTAINERS_DUMOL }}@github.com/chevah/server.git
        cd server
        sudo -H -u chevah git checkout ${GITHUB_HEAD_REF}

    - name: Build Python
      run: |
        cd ~chevah/pythia
        sudo -H -u chevah bash ./pythia build

    - name: Test Python
      run: |
        cd ~chevah/pythia
        sudo -H -u chevah bash ./pythia test

    - name: Upload testing package
      run: |
        cd ~chevah/pythia
        sudo -H -u chevah mkdir -pv ~chevah/.ssh/
        sudo -H -u chevah touch priv_key
        chmod 600 priv_key
        echo "${{ secrets.SFTPPLUS_BIN_PRIV_KEY }}" > priv_key
        echo "${{ secrets.SFTPPLUS_BIN_HOST_KEY }}" > ~chevah/.ssh/known_hosts
        sudo -H -u chevah bash ./publish_dist.sh

    # If one of the above steps fails, fire up tmate for remote debugging.
    - name: Tmate debug on failure
      if: failure() && env.CHEVAH_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2
